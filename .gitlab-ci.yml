image: openjdk:8-jdk

variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.3"
    ANDROID_SDK_TOOLS: "4333796"

before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - chmod +x ./fdroidPrep.sh
    - chmod +x ./gradlew
    - echo "FabricApiKey=$FABRIC_APIKEY" >> ./gradle.properties
    - echo "GoogleApiKey=$MAPS_KEY" >> ./gradle.properties
    - echo "android.enableJetifier=true" >> ./gradle.properties
    - echo "android.useAndroidX=true" >> ./gradle.properties
stages:
    - build

buildPlay:
    stage: build
    script:
    - ./gradlew assemblePlayDebug
    artifacts:
        paths:
        - app/build/outputs/apk/play/debug/app-play-debug.apk

buildFdroid:
    stage: build
    script:
    - ./fdroidPrep.sh
    - ./gradlew assembleFdroidDebug
    artifacts:
        paths:
        - app/build/outputs/apk/fdroid/debug/app-fdroid-debug.apk